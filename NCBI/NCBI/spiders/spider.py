# -*- coding: utf-8 -*-
import scrapy
import re,json,urllib,pdb
from urlparse import urlparse
from scrapy.spiders import Spider
from scrapy.selector import Selector
from scrapy.utils.response import get_base_url
from scrapy.spiders import CrawlSpider,Rule
from scrapy.linkextractors.sgml import SgmlLinkExtractor
from scrapy.linkextractors import LinkExtractor
from ..items import Snp_ref

class SnpSpider(scrapy.Spider):
    name = "SNP"
    allowed_domains = ["http://www.ncbi.nlm.nih.gov"]

    #rsids="rs10488631,rs1535,rs174575,rs1800790,rs5985,rs1695,rs7739264,rs1537377,rs7521902,rs801112,rs10859871,rs13394619,rs4141819,rs6542095,rs16826658,rs12700667,rs10965235,rs2172873,rs991954,rs7913069,rs991954,rs12484776,rs2280543,rs991954,rs1801260,rs11073058,rs1776029,rs9350504,rs148534631,rs13107325,rs1421085,rs28399504,rs41291556,rs6444175,rs7193788,rs1851665,rs662799,rs301,rs429358,rs2075291,rs28933693,rs28937900,rs28936383,rs2764264,rs1805007,rs2153271,rs17101923,rs12229918,rs1351394,rs17563,rs17105278,rs12534093,rs1042713,rs1815739,rs12612420,rs2253206,rs1172294,rs10804533,rs9635758,rs6545572,rs4369815,rs7642134,rs3745516,rs574808,rs1852469,rs3892097,rs187238,rs1726866,rs11066280,rs3213094,rs4085613,rs3212227,rs1265181,rs10484554,rs13146789,rs9854612,rs6565681,rs6413419,rs4821116,rs3130542,rs72547571,rs10273639,rs372883,rs12413624,rs5768709,rs2255280,rs9573163,rs3790844,rs4885093,rs9543325,rs5443,rs75527207,rs17863778,rs17868323,rs17868324,rs2306283,rs10929302,rs1801394,rs1801280,rs1799930,rs1799931,rs4148941,rs12970134,rs1800779,rs10087214,rs5051,rs4762,rs699,rs5186,rs4961,rs1042714,rs1956529,rs1800588,rs17145738,rs2271293,rs646776,rs6511720,rs4420638,rs780094,rs439401,rs12654264,rs326,rs9296095,rs739496,rs3733606,rs560887,rs1800562,rs33930165,rs363050,rs1799941,rs6258,rs727428,rs722208,rs13266634,rs12567209,rs138694505,rs335206,rs2483280,rs17744182,rs17026156,rs7433306,rs11773845,rs1799983,rs599839,rs1333049,rs3803915,rs3782886,rs1048990,rs11206510,rs4618210,rs1799768,rs264,rs2200733,rs6843082,rs1799998,rs6499600,rs2106261,rs13376333,rs5063,rs10033464,rs1805123,rs2244012,rs13153971,rs1063355,rs4950928,rs7216389,rs987870,rs3019885,rs2474937,rs1531070,rs713041,rs1050450,rs8102683,rs396991,rs2032583,rs1954787,rs7997012,rs7569963,rs4675690,rs2518224,rs11549465,rs3781264,rs13361707,rs3765527,rs4072037,rs4460629,rs13042395,rs9841504,rs2976392,rs1801131,rs12479919,rs1799945,rs2274976,rs1805087,rs1780316,rs4654748,rs730821,rs1801133,rs1801222,rs558660,rs35211634,rs9426,rs602662,rs1801198,rs11645428,rs6564851,rs12934922,rs7501331,rs2241057,rs5030655,rs1051730,rs6113491,rs6625163,rs17056278,rs7078160,rs8049367,rs13041247,rs2235371,rs4791774,rs4565946,rs2231142,rs11722228,rs505802,rs12498742,rs11726117,rs6133175,rs9939609,rs4788102,rs7138803,rs925946,rs10838738,rs10871777,rs6548238,rs13130484,rs6269,rs11204971,rs479844,rs7927894,rs6700998,rs848,rs4664308,rs11129182,rs17047573,rs17047586,rs12219125,rs4838605,rs2038823,rs17376456,rs4149056,rs4363657,rs17238540,rs2032582,rs2075252,rs2228001,rs6550435,rs12290811,rs10994415,rs17826816,rs12202969,rs4948418,rs13065203,rs9274477,rs7553711,rs2305795,rs4917014,rs2274223,rs738722,rs753724,rs11187842,rs3765524,rs2285947,rs2294008,rs505922,rs505922Ã¥ÃŠ,rs4293393,rs4142110,rs219781,rs11746443,rs1000597,rs7105934,rs7579899,rs11021504,rs3816804,rs1042725,rs3751599,rs11082671,rs12612930,rs6060371,rs4453791,rs1800872,rs1401327,rs17244841,rs1800012,rs3803662,rs1219648,rs9485370,rs8192678,rs2267668,rs224278,rs9430161,rs7929521,rs10932125,rs6603859,rs3750518,rs2237892,rs2237895,rs5219,rs10830962,rs4402960,rs7754840,rs4607517,rs3740066,rs2287622,rs9270984,rs877819,rs10845606,rs4852324,rs6705628,rs6804441,rs3734266,rs2230926,rs729302,rs1142345,rs1800462,rs1799971,rs6277,rs17070145,rs478304,rs1159268,rs38055,rs868213,rs10865331,rs2242944,rs10050860,rs30187,rs2303138,rs7743761,rs10427255,rs11067228,rs2735839,rs401681,rs10993994,rs4430796,rs6983267,rs11649743,rs12653946,rs10896449,rs902774,rs9600079,rs1465618,rs721048,rs12621278,rs5759167,rs7679673,rs339331,rs1512268,rs10086908,rs16901979,rs1447295,rs1953558,rs20455,rs17553719,rs1800566,rs35652124,rs3918242,rs1799750,rs3025058,rs1058396,rs8102137,rs1014971,rs710521,rs798766,rs1495741,rs9642880,rs823156,rs34778348,rs4698412,rs356220,rs3750847,rs1061147,rs2230199,rs9621532,rs547154,rs76495380,rs2725383,rs12788764,rs59227481,rs3890324,rs55914911,rs146109287,rs1192201,rs25487,rs11911275,rs75796365,rs2725338,rs4733220,rs11574311,rs2016520,rs11944041,rs2241766,rs12188950,rs2048327,rs498872,rs6010620,rs4295627,rs4977756,rs12770228,rs10757278,rs700675,rs1429412,rs911271,rs10958409,rs9298506,rs1333040,rs1314913,rs955988,rs10910078,rs4994,rs1799722,rs4343,rs7975788,rs12378991,rs1801252,rs1128503,rs7671167,rs7453920,rs2853953,rs12614,rs422951,rs378352,rs9277535,rs2856718,rs3077,rs735665,rs7176508,rs11083846,rs17483466,rs872071,rs10508372,rs1701704,rs404860,rs7686660,rs1837253,rs2187668,rs9851967,rs6441961,rs2024825,rs2221593,rs663743,rs73058713,rs6457327,rs10484561,rs12248560,rs4244285,rs3129900,rs10192566,rs7651446,rs9303542,rs8170,rs2072590,rs10088218,rs3814113,rs6842241,rs1800460,rs16891982,rs12203592,rs114800139,rs117633859,rs705381,rs7574865,rs3125734,rs12617656,rs11203366,rs2233434,rs1854853,rs12379034,rs4344,rs2205960,rs9888739,rs13277113,rs2234962,rs10883365,rs9858542,rs2155219,rs7775228,rs5361,rs1143634,rs11697325,rs1799964,rs1800795,rs2220511,rs6107516,rs7714584,rs11190140,rs1004819,rs3197999,rs17234657,rs322458,rs6311,rs2395185,rs10936599,rs9420907,rs5882,rs10165485,rs755017,rs11100479,rs7531806,rs1060573,rs2894342,rs3130690,rs2273697,rs3812718,rs1061235,rs3909184,rs2844682,rs2227956,rs1043620,rs506770,rs10937273,rs285,rs328,rs13702,rs17782313,rs4410790,rs762551,rs671,rs27072,rs7590720,rs1001179,rs279845,rs1229984,rs2269726,rs833497,rs4455882,rs560766,rs939661,rs2730260,rs7839488,rs4395927,rs4143094,rs7229639,rs4939827,rs7758229,rs1049550,rs11031731,rs4804803,rs1547374,rs7677751,rs74225573,rs73329476,rs1800813,rs2685056,rs4915077,rs7850258,rs2961920,rs965513,rs944289,rs12713559,rs5742904,rs28940579,rs28940580,rs28940578,rs11466023,rs3743930,rs16946160,rs6570507,rs11190870,rs1042858,rs7538876,rs1801253,rs28940869,rs6703183,rs8141797,rs12722,rs1432295,rs2734986,rs6904029,rs2248462,rs2019960,rs6903608,rs1860661,rs20541,rs1799853,rs2740574,rs9561778,rs231775,rs1057910,rs8050894,rs1805008,rs12948217,rs28940574,rs28940279,rs9469099,rs12634229,rs878860,rs10995251,rs7613051,rs9368677,rs176095,rs1883832,rs1746048,rs2259816,rs3744700,rs1044317,rs6903956,rs3798220,rs4977574,rs4495487,rs12340895,rs4424296,rs9533095,rs227425,rs1430740,rs2273061,rs6894139,rs4140564,rs7639618,rs8067378,rs13117307,rs4684677,rs2075356,rs34911341,rs696217,rs2146180,rs755383,rs210138,rs995030,rs381815,rs2681472,rs1801058,rs751141,rs3764261,rs964184,rs7016880,rs4635554,rs1260326,rs10034228,rs9405098,rs3129860,rs9275319,rs455804,rs9272105,rs17401966,rs7975232,rs731236,rs1544410,rs2228570,rs13068893,rs7025486,rs3918290,rs1801265,rs1801159,rs67376798,rs1801019,rs7454108,rs2736100,rs1980653,rs7934606,rs1278769,rs2034650,rs1981997,rs12610495,rs6793295,rs2076295,rs7698250,rs7221059,rs8034191,rs1663689,rs11571833,rs4809957,rs17879961,rs13314271,rs247008,rs2895680,rs9439519,rs7989336,rs17381664,rs2531995,rs13041126,rs4735692,rs9936833,rs1390096,rs11206226,rs738409,rs2143571,rs2073080,rs4880,rs662,rs854561,rs4585,rs3914132,rs7759938,rs12762549,rs13429458,rs13405728,rs2479106,rs1894116,rs705702,rs2272046,rs6897932,rs3135388,rs877529,rs4273077,rs1052501,rs2285803,rs4487645,rs17653722,rs6832151,rs1456988,rs1265883,rs229527,rs2294025,rs2517532,rs925489,rs4338740,rs1472565,rs225013,rs4704397,rs33985472,rs34690599,rs34451549,rs11549407,rs35004220,rs33950507,rs33986703,rs33960103,rs34716011,rs33915217,rs33971440,rs63750783,rs35724775,rs33944208,rs34598529,rs4299376,rs1367117,rs1558902,rs4506565,rs7903146,rs11887534,rs7412,rs1801282,rs747650,rs861020,rs987525,rs10828088,rs17083838,rs2359536,rs10763170,rs1800955,rs2254546,rs2857151,rs1569723,rs4813003,rs2736340,rs1799884,rs9494145,rs10128556,rs10195871,rs28939383,rs2240017,rs3923809,rs1050565,rs10500565,rs523096,rs11024102,rs2165241,rs3753841,rs1015213,rs28933391,rs28935769,rs6139030,rs1127354,rs8099917,rs3135363,rs9263726,rs9510787,rs6774494,rs29232,rs28421666,rs1412829,rs5030857,rs5030861,rs5030858,rs28934899,rs5030855,rs5030853,rs5030852,rs5030849,rs5030841,rs5082,rs873549,rs8032158,rs940187,rs9275572,rs3118470,rs9479482,rs7682241,rs3024490,rs1495965,rs1800871,rs638893,rs1417210,rs11593576,rs10876864,rs9468925,rs11966200,rs2236313,rs12762303,rs174550,rs4986893,rs6280,rs3813929,rs5065,rs1800497,rs1800491,rs25531,rs2965667,rs10505806,rs16973225,rs9349407,rs3851179,rs2075650,rs11931074,rs2297404,rs28929474,rs17580,rs2395029,rs9923231,rs2592551,rs12272004,rs11057830,rs2108622,rs4646536,rs2282679,rs7041,rs2298849,rs2298585,rs41281112,rs3760776,rs1047781,rs506338,rs11046205,rs10948347,rs8080944,rs7924176,rs1994969,rs17608059,rs1154155,rs2834188,rs1551570,rs10995245,rs2854536,rs9270965,rs9271117,rs17212223,rs7744020,rs2277339,rs11668344,rs4246511,rs4693089,rs365132,rs9275596,rs2412971,rs6677604,rs11574637,rs2071543,rs1883414,rs9355610,rs4947296,rs1521,rs2281388,rs11060736,rs7559271,rs11902138,rs399593,rs7310409,rs11265260,rs1892534,rs9375813,rs7553007,rs2393791,rs2576037,rs1064395,rs17822931,rs6954895,rs4680,rs163182,rs391300,rs231359,rs7172432,rs7612463,rs1501299,rs17584499,rs1893217,rs3184504,rs725613,rs1990760,rs11571316,rs3087243,rs9273363"
    rsids="rs10995245,rs1154155,rs1551570,rs2305795,rs2854536,rs7553711,rs9271117,rs2075650,rs2297404,rs3851179,rs429358,rs9349407,rs10484554,rs1265181,rs3212227,rs3213094,rs4085613,rs11571833,rs13314271,rs1663689,rs17879961,rs247008,rs2895680,rs4809957,rs8034191,rs4148941"
    start_urls=["http://www.ncbi.nlm.nih.gov/projects/SNP/snp_ref.cgi?rs="+i for i in rsids.split(',')]

    def parse(self, response):
        items=[]
        sel=Selector(response)
        rsid=response.url.split('?')[1].replace('rs=','')
        # RefSNP=sel.xpath('//table[@id="RefSNP"]')
        item=Snp_ref()
        allele=sel.xpath('//table[@id="Allele"]')
        # HGVS_Names=sel.xpath('//table[@id="HGVS Names"]').extract()

        # rsid=Field()
        # Organism=Field()
        # MoleculeType=Field()
        # CreatedUpdated=Field()
        # Map_to_Genome_Build=Field()
        # Validation_Status=Field()
        # Citation=Field()
        # Association=Field()
        # dict={}
        # oldkey=""
        # for tr in RefSNP.xpath('tr'):
        #     for td in tr.xpath('td'):
        #         key=td.xpath('strong').xpath('text()').extract()
        #         if key!=None and key!="" and len(key)!=0:
        #             oldkey=key[0].replace(' ','').replace('/','').replace(':','')
        #             dict[oldkey]={}
        #         else:
        #             if oldkey=='Organism':
        #                 dict[oldkey]=''.join([td.xpath('text()').extract()[0],td.xpath('a/em/text()').extract()[0],')'])
        #             elif oldkey=="MaptoGenomeBuild":
        #                 dict[oldkey]='/'.join([' '.join(x.xpath('text()').extract()[0]) for x in td.xpath('a')])
        #             else:
        #                 dict[oldkey]=td.xpath('text()').extract[0]
        #
        # for key,value in dict.items():
        #     item[key]=value
        item["rsid"]=rsid
        item["RefSNP_Alleles"]=''.join([allele.xpath('tr')[1].xpath('td/text()')[0].extract(),allele.xpath('tr')[1].xpath('td/span/text()')[0].extract(),')'])
        item["Ancestral_Allele"]=allele.xpath('tr')[3].xpath('td/text()')[0].extract()
        items.append(item)
        print('-----------')
        print(item)
        return items
        #RefSNP.xpath('tr')[0].xpath('td')[0].xpath('strong').xpath('text()').extract()[0]

        #Organism==>#''.join([RefSNP.xpath('tr')[0].xpath('td')[1].xpath('text()').extract()[0],RefSNP.xpath('tr')[0].xpath('td')[1].xpath('a/em/text()').extract()[0],')'])

        #Map to Genome Build>>#'/'.join([' '.join(x.xpath('text()').extract()[0]) for x in RefSNP.xpath('tr')[3].xpath('td')[1].xpath('a')])

