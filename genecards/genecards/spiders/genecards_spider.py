#coding:utf-8
__author__ = 'similarface'
import re,json,urllib,pdb
from urlparse import urlparse
from scrapy.spiders import Spider
from scrapy.selector import Selector
from scrapy.utils.response import get_base_url
from scrapy.spiders import CrawlSpider,Rule
from scrapy.linkextractors.sgml import SgmlLinkExtractor
from scrapy.linkextractors import LinkExtractor
from genecards.items import GenecardsItem

class GenecardsSpider(CrawlSpider):
    name="genecards"

    allowed_domains=["genecards.org"]

    rsids="rs5030841,rs5030849,rs5030853,rs5030857,rs5030858,rs28934899,rs5030855,rs5030861,rs5030852,rs36212066,rs1800546,rs1050828,rs1050829,rs4680,rs4950928,rs7216389,rs7574865,rs2294008,rs505922,rs229527,rs2187668,rs4664308,rs16946160,rs9275596,rs2235529,rs9434741,rs10965235,rs12700667,rs9340799,rs12754041,rs8070723,rs1768208,rs1805165,rs7120118,rs925946,rs6548238,rs13130484,rs4788102,rs7850258,rs3184504,rs4915077,rs2517532,rs2248462,rs1432295,rs6903608,rs2019960,rs2734986,rs6904029,rs13333226,rs17367504,rs12413409,rs16998073,rs1378942,rs5370,rs17465637,rs17483466,rs13397985,rs872071,rs735665,rs7176508,rs11083846,rs798766,rs1058396,rs1014971,rs8102137,rs1495741,rs9642880,rs710521,rs11204971,rs479844,rs848,rs7927894,rs6700998,rs2242944,rs868213,rs30187,rs10050860,rs2303138,rs7743761,rs10865331,rs9888739,rs7574865,rs13277113,rs2205960,rs1219648,rs3803662,rs9485370,rs4948418,rs7714584,rs3197999,rs11190140,rs17234657,rs1893217,rs1004819,rs2395185,rs9858542,rs10883365,rs11203366,rs7574865,rs11887534,rs8034191,rs10484554,rs3212227,rs11209026,rs505922,rs2231142,rs12498742,rs10757278,rs12526453,rs1746048,rs1122608,rs9982601,rs17465637,rs6725887,rs2306374,rs3798220,rs11556924,rs579459,rs12413409,rs964184,rs4773144,rs2895811,rs3751812,rs10871777,rs2736100,rs2076295,rs7934606,rs1981997,rs12610495,rs2034650,rs6793295,rs1980653,rs1278769,rs11746443,rs1000597,rs4142110,rs4293393,rs219781,rs2187668,rs6822844,rs6441961,rs9851967,rs9273363,rs1990760,rs1893217,rs3184504,rs725613,rs3087243,rs11571316,rs6897932,rs3135388,rs2165241,rs1805007,rs16891982,rs7903146,rs5219,rs4402960,rs1111875,rs13266634,rs2237892,rs4712523,rs1801282,rs2383208,rs2458413,rs5742915,rs3018362,rs1561570,rs484959,rs9275596,rs16946160,rs6495446,rs4664308,rs2187668,rs873549,rs940187,rs8032158,rs7775228,rs2155219,rs4908760,rs13076312,rs706779,rs11203203,rs229527,rs2236313,rs8192917,rs532098,rs3823355,rs10757278,rs9298506,rs911271,rs1429412,rs10958409,rs700675,rs1333040,rs7216389,rs13153971,rs4950928,rs671,rs7590720,rs27072,rs7574865,rs10488631,rs574808,rs3745516,rs2274223,rs2274223,rs356220,rs823156,rs4698412,rs34778348,rs3923809,rs4293393,rs6983267,rs3802842,rs547154,rs2230199,rs9621532,rs1061147,rs3750847,rs7412,rs429358,rs4430796,rs12621278,rs10993994,rs6983267,rs1447295,rs1512268,rs2200733,rs10033464,rs4565946,rs1800497,rs1800497,rs4986790,rs6025,rs1801133,rs964184,rs2476601,rs2231142,rs1801260,rs755383,rs2736100,rs210138,rs995030,rs955988,rs10910078,rs3803662,rs174230,rs12425791,rs2294008,rs11190870,rs3914132,rs1573496,rs6939340,rs1154155,rs7553711,rs2305795,rs12770228,rs2287622,rs3740066,rs3772622,rs12340895,rs4495487,rs761100,rs987525,rs861020,rs2073711,rs7913069,rs12484776,rs2280543,rs13405728,rs13429458,rs2479106,rs2072590,rs3814113,rs7754840,rs10830962,rs7903146,rs1990760,rs2187668,rs224278,rs9430161,rs10513789,rs6812193,rs7639618,rs4140564,rs1573496,rs2231801,rs1573496,rs2653349,rs2200733,rs7025486,rs10757278,rs2651899,rs11172113,rs10166942,rs1024161,rs9479482,rs9275572,rs944289,rs965513,rs2961920,rs1051730,rs9543325,rs3790844,rs1051730,rs7579899,rs7105934,rs10484561,rs6457327,rs7671167,rs8034191,rs10995190,rs4680,rs3024490,rs1495965,rs1800871,rs7538876,rs10488631,rs7574865,rs16891982,rs12203592,rs833497,rs2269726,rs9510787,rs29232,rs10260404,rs174575,rs1535,rs4994,rs1801133,rs4680,rs1801133,rs429358,rs7412,rs5082,rs662799,rs429358,rs7412,rs1801282,rs9939609,rs1801133,rs429358,rs7412,rs9939609,rs7903146,rs964184,rs429358,rs3024490,rs7903146,rs13266634,rs429358,rs7412,rs9939609,rs1801282,rs4680,rs2187668,rs429358,rs2517532,rs4915077,rs1801282,rs1800588,rs964184,rs10034228,rs12970134,rs662799,rs5082,rs9939609,rs1801282,rs1800588,rs4680,rs1800497,rs6269,rs1953558,rs17070145,rs363050,rs2764264,rs3827760,rs401681,rs10993994,rs11067228,rs4430796,rs2735839,rs11031731,rs4804803,rs838133,rs1421085,rs4994,rs1801282,rs11857829,rs560766,rs939661,rs16991615,rs6548238,rs925946,rs7138803,rs9939609,rs13130484,rs4788102,rs10838738,rs10871777,rs3739070,rs6060371,rs1042725,rs964184,rs2153271,rs1805007,rs2332175,rs314277,rs1393350,rs12896399,rs3077,rs2856718,rs762551,rs4410790,rs174575,rs1535,rs7816345,rs4849884,rs17625845,rs7903146,rs10936599,rs2736100,rs9420907,rs755017,rs11100479,rs10165485,rs6625163,rs6113491,rs1051730,rs1058396,rs1815739,rs4988235,rs17646946,rs17822931,rs713598,rs671,rs762551,rs6025,rs671"

    start_urls=["http://www.genecards.org/Search/Keyword?queryString="+i for i in rsids.split(',')]
    #start_urls=["http://www.genecards.org/Search/Keyword?queryString=rs2274223","http://www.genecards.org/Search/Keyword?queryString=rs4460629"]
    # ##此处要注意?号的转换，复制过来需要对?号进行转换。
    rules = [
        Rule(LinkExtractor(allow=('http://www.genecards.org/cgi-bin/carddisp.pl\?gene=\w{1,}&keywords=\w{1,}',)),follow=True, callback='parse_item'),
    ]

    def parse_item(self, response):
        sel=Selector(response)
        items=[]
        item=GenecardsItem()
        #获取rsid的值
        item['rsid']=str(response._url).split('=')[2]
        #获取基因名称
        item['genename']=[i.encode('utf-8') for i in sel.xpath("//h1[@id='geneSymbol']/strong/em/text()").extract()]
        #获取gytogeneticband值Cytogenetic band:
        item['gytogeneticband']=[i.encode('utf-8').replace(' by ','') for i in sel.xpath("//dl[@class='dl-horizontal gc-dl-9']/dd/ul[@class='list-inline']/li[1]/text()").extract()]
        items.append(item)
        return items
        '''
        >>> sel.xpath("//dl[@class='dl-horizontal gc-dl-9']/dd/ul[@class='list-inline']/li[1]/text()").extract()
        [u'10q23.33 by ']
        >>> sel.xpath("//h1[@id='geneSymbol']/strong/em/text()").extract()
        [u'PLCE1']
        '''
